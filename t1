
box::use(shiny[...], RSQLite[...])

#'@export
ui <- function(id) {
  ns = NS(id)
  fluidPage(
    
    titlePanel("Integration is the key"),
    mainPanel(
      tabsetPanel(
        id = ns("main_tabs"),
        tabPanel("Home",
                 div(class = "panel",
                     h3("Find candidates for proposal making!"),
                     p("Click a button to proceed."),
                     actionButton(ns("create_account_btn"), "Create Account", class = "button-custom"),
                     actionButton(ns("login_btn"), "Login", class = "button-custom"),
                     uiOutput(ns("account_management_ui")),
                     uiOutput(ns("message_ui"))  # Placeholder for messages
                 )
        )
      )
    )
  )
}

#'@export
server <- function(id) {
  moduleServer(id, function(input, output, session) {
    db <- dbConnect(SQLite(), "users.db")
    
    dbExecute(db, "CREATE TABLE IF NOT EXISTS users (
      id INTEGER PRIMARY KEY,
      username TEXT UNIQUE,
      name TEXT,
      password TEXT,
      designation TEXT
    )")
    
   #Create account
    observeEvent(input$create_account_btn, {
      output$account_management_ui <- renderUI({
        div(class = "panel",
            h4("Create Account"),
            div(class="account-form",
            
            div(textInput(session$ns("new_username"), "Username "), class = "input-custom"),
            div(textInput(session$ns("name"), "Name "), class = "input-custom"),
            div(passwordInput(session$ns("new_password"), "Password"), class = "input-custom"),
            div(selectInput(session$ns("designation"), "Designation", choices = c("Employee", "Manager", "Director"), selected = "Employee"), class = "input-custom"),
            actionButton(session$ns("create"), "Create Account", class = "button-custom")
        ))
      })
      output$message_ui <- renderUI(NULL)  
    })
    
    # Handle login
    observeEvent(input$login_btn, {
      output$account_management_ui <- renderUI({
        div(class = "panel",
            h4("Login"),
            div(textInput(session$ns("login_username"), "Username"), class = "input-custom"),
            div(passwordInput(session$ns("login_password"), "Password"), class = "input-custom"),
            actionButton(session$ns("login_action"), "Login", class = "button-custom")
        )
      })
      output$message_ui <- renderUI(NULL)  # Clear messages when logging in
    })
    
    # Handle account creation
    observeEvent(input$create, {
      new_username <- input$new_username
      name <- input$name
      new_password <- input$new_password
      designation <- input$designation
      
      tryCatch({
        dbExecute(db, "INSERT INTO users (username, name, password, designation) VALUES (?, ?, ?, ?)",
                  params = list(new_username, name, new_password, designation))
        
       
        output$message_ui <- renderUI({
          h4("Account Created Successfully!", class = "success-message")
        })
        
        
        output$account_management_ui <- renderUI(NULL)  
        
      }, error = function(e) {
        output$message_ui <- renderUI({
          h4("Username already exists!", class = "error-message")
        })
        
        # Hide
        output$account_management_ui <- renderUI(NULL)  # Hide the form
      })
    })
    
    # login
    observeEvent(input$login_action, {
      username <- input$login_username
      password <- input$login_password
      
      user <- dbGetQuery(db, "SELECT * FROM users WHERE username = ? AND password = ?", params = list(username, password))
      
      if (nrow(user) == 1) {
        designation <- user$designation
        output$message_ui <- renderUI({
          h4(paste("Successfully logged in as", designation), class = "success-message")
        })
        
       #hide
        output$account_management_ui <- renderUI(NULL)
      } else {
        output$message_ui <- renderUI({
          h4("Invalid username or password", class = "error-message")
        })
        
        #hide
        output$account_management_ui <- renderUI(NULL)  
    })
  })
}
